name: Pull Docker Image & Package to Tar

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # 每周日自动更新（可选）

jobs:
  package-image:
    runs-on: ubuntu-latest
    steps:
      - name: Check Docker version
        run: docker --version

      # 登录DockerHub（私有镜像需此步骤，公开镜像可删除）
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 拉取镜像
      - name: Pull target Docker image
        run: |
          TARGET_IMAGE="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGENAME }}:latest"
          echo "拉取镜像: $TARGET_IMAGE"
          docker pull $TARGET_IMAGE
          docker images | grep ${{ secrets.DOCKER_IMAGENAME }}

      # 打包为tar文件
      - name: Package image to tar file
        run: |
          TARGET_IMAGE="${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_IMAGENAME }}:latest"
          TAR_FILENAME="${{ secrets.DOCKER_IMAGENAME }}_$(date +%Y%m%d).tar"
          docker save -o $TAR_FILENAME $TARGET_IMAGE
          ls -lh $TAR_FILENAME
          echo "TAR_FILENAME=$TAR_FILENAME" >> $GITHUB_ENV

      # 仅保留Artifact下载（权限足够，无403问题）
      - name: Upload tar to Artifact（网页直接下载）
        uses: actions/upload-artifact@v4
        with:
          name: ${{ secrets.DOCKER_IMAGENAME }}-image-tar  # 下载时显示的名称
          path: ${{ env.TAR_FILENAME }}
          retention-days: 90  # 保留90天，可调整
